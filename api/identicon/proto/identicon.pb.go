// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/identicon/proto/identicon.proto

package identiconpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Response struct {
	FileChunk            []byte   `protobuf:"bytes,1,opt,name=fileChunk,proto3" json:"fileChunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_257818c056fc2661, []int{0}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetFileChunk() []byte {
	if m != nil {
		return m.FileChunk
	}
	return nil
}

type Request struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Pixelsize            int32    `protobuf:"varint,3,opt,name=pixelsize,proto3" json:"pixelsize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_257818c056fc2661, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *Request) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Request) GetPixelsize() int32 {
	if m != nil {
		return m.Pixelsize
	}
	return 0
}

func init() {
	proto.RegisterType((*Response)(nil), "identiconpb.Response")
	proto.RegisterType((*Request)(nil), "identiconpb.Request")
}

func init() {
	proto.RegisterFile("api/identicon/proto/identicon.proto", fileDescriptor_257818c056fc2661)
}

var fileDescriptor_257818c056fc2661 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x52, 0x4e, 0x2c, 0xc8, 0xd4,
	0xcf, 0x4c, 0x49, 0xcd, 0x2b, 0xc9, 0x4c, 0xce, 0xcf, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x47,
	0xf0, 0xf5, 0xc0, 0x7c, 0x21, 0x6e, 0xb8, 0x40, 0x41, 0x92, 0x92, 0x06, 0x17, 0x47, 0x50, 0x6a,
	0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x0c, 0x17, 0x67, 0x5a, 0x66, 0x4e, 0xaa, 0x73, 0x46,
	0x69, 0x5e, 0xb6, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0x42, 0x40, 0x29, 0x9c, 0x8b, 0x3d,
	0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x8a, 0x8b, 0x03, 0x24, 0xee, 0x97, 0x98, 0x9b,
	0x0a, 0x56, 0xc7, 0x19, 0x04, 0xe7, 0x0b, 0x09, 0x71, 0xb1, 0x14, 0x67, 0x56, 0xa5, 0x4a, 0x30,
	0x01, 0xc5, 0x59, 0x83, 0xc0, 0x6c, 0x90, 0xc1, 0x05, 0x99, 0x15, 0xa9, 0x39, 0x60, 0x09, 0x66,
	0xb0, 0x04, 0x42, 0xc0, 0x28, 0x90, 0x4b, 0xc0, 0x13, 0xe6, 0xa2, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc,
	0xe4, 0x54, 0x21, 0x5b, 0x2e, 0x1e, 0xf7, 0xd4, 0x12, 0xb8, 0xb0, 0x90, 0x88, 0x1e, 0x92, 0xa3,
	0xf5, 0xa0, 0xee, 0x90, 0x12, 0x45, 0x13, 0x85, 0xf8, 0xc3, 0x80, 0xd1, 0x89, 0x37, 0x0a, 0xd9,
	0x93, 0x49, 0x6c, 0x60, 0x8f, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0x6b, 0x1a, 0xab,
	0x1f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IdenticonServiceClient is the client API for IdenticonService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdenticonServiceClient interface {
	GetIdenticon(ctx context.Context, in *Request, opts ...grpc.CallOption) (IdenticonService_GetIdenticonClient, error)
}

type identiconServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIdenticonServiceClient(cc grpc.ClientConnInterface) IdenticonServiceClient {
	return &identiconServiceClient{cc}
}

func (c *identiconServiceClient) GetIdenticon(ctx context.Context, in *Request, opts ...grpc.CallOption) (IdenticonService_GetIdenticonClient, error) {
	stream, err := c.cc.NewStream(ctx, &_IdenticonService_serviceDesc.Streams[0], "/identiconpb.IdenticonService/GetIdenticon", opts...)
	if err != nil {
		return nil, err
	}
	x := &identiconServiceGetIdenticonClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type IdenticonService_GetIdenticonClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type identiconServiceGetIdenticonClient struct {
	grpc.ClientStream
}

func (x *identiconServiceGetIdenticonClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IdenticonServiceServer is the server API for IdenticonService service.
type IdenticonServiceServer interface {
	GetIdenticon(*Request, IdenticonService_GetIdenticonServer) error
}

// UnimplementedIdenticonServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIdenticonServiceServer struct {
}

func (*UnimplementedIdenticonServiceServer) GetIdenticon(req *Request, srv IdenticonService_GetIdenticonServer) error {
	return status.Errorf(codes.Unimplemented, "method GetIdenticon not implemented")
}

func RegisterIdenticonServiceServer(s *grpc.Server, srv IdenticonServiceServer) {
	s.RegisterService(&_IdenticonService_serviceDesc, srv)
}

func _IdenticonService_GetIdenticon_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IdenticonServiceServer).GetIdenticon(m, &identiconServiceGetIdenticonServer{stream})
}

type IdenticonService_GetIdenticonServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type identiconServiceGetIdenticonServer struct {
	grpc.ServerStream
}

func (x *identiconServiceGetIdenticonServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _IdenticonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "identiconpb.IdenticonService",
	HandlerType: (*IdenticonServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetIdenticon",
			Handler:       _IdenticonService_GetIdenticon_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/identicon/proto/identicon.proto",
}
